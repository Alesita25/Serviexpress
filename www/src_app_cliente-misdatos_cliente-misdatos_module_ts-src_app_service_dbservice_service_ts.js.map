{"version":3,"file":"src_app_cliente-misdatos_cliente-misdatos_module_ts-src_app_service_dbservice_service_ts.js","mappings":"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","sources":["./src/app/cliente-misdatos/cliente-misdatos-routing.module.ts","./src/app/cliente-misdatos/cliente-misdatos.module.ts","./src/app/service/dbservice.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ClienteMisdatosPage } from './cliente-misdatos.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ClienteMisdatosPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ClienteMisdatosPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ClienteMisdatosPageRoutingModule } from './cliente-misdatos-routing.module';\r\n\r\nimport { ClienteMisdatosPage } from './cliente-misdatos.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ClienteMisdatosPageRoutingModule\r\n  ],\r\n  declarations: [ClienteMisdatosPage]\r\n})\r\nexport class ClienteMisdatosPageModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { SQLite, SQLiteObject } from '@awesome-cordova-plugins/sqlite/ngx';\r\nimport { Platform, ToastController } from '@ionic/angular';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Reservas } from './reservas';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DbserviceService {\r\n\r\n  public database: SQLiteObject;\r\n\r\n  tablaReservas: string = \"CREATE TABLE IF NOT EXISTS reserva(id INTEGER PRIMARY KEY autoincrement, servicio VARCHAR(50) NOT NULL, fecha VARCHAR(50) NOT NULL);\";\r\n  registro: string = \"INSERT or IGNORE INTO reserva(id, servicio, fecha) VALUES (1, 'Titulo noticia', '01-12-2022');\";\r\n  listaReservas = new BehaviorSubject([]);\r\n\r\n  private isDbReady: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  constructor(private sqlite: SQLite, private platform: Platform, public toastController: ToastController) {\r\n    this.crearBD();\r\n   }\r\n\r\n   addReserva(servicio,fecha){\r\n    let data=[servicio,fecha];\r\n    return this.database.executeSql('INSERT INTO reserva(servicio,fecha) VALUES(?,?)',data)\r\n    .then(res =>{\r\n      this.buscarReservas();\r\n    })\r\n\r\n  }\r\n\r\n  updateReserva(id, servicio, fecha){\r\n    let data = [servicio, fecha, id];\r\n    return this.database.executeSql('UPDATE reserva SET servicio = ?, fecha = ? WHERE id = ?', data)\r\n    .then(data2 =>{\r\n      this.buscarReservas();\r\n    })\r\n\r\n  }\r\n\r\n  deleteReserva(id){\r\n    return this.database.executeSql('DELETE FROM reserva WHERE id = ?', [id])\r\n    .then(a =>{\r\n      this.buscarReservas();\r\n    })\r\n  }\r\n\r\n  dbState() {\r\n    return this.isDbReady.asObservable();\r\n  }\r\n\r\n  crearBD() {\r\n    this.platform.ready().then(() => {\r\n      this.sqlite.create({\r\n        name: 'serviexpress.db',\r\n        location: 'default'\r\n\r\n      }).then((db: SQLiteObject) => {\r\n        this.database = db;\r\n        this.presentToast(\"BD Creada\");\r\n        //llamamos a la creaciÃ³n de tablas\r\n        this.crearTablas();\r\n      }).catch(e => this.presentToast(e));\r\n    })\r\n  }\r\n\r\n  async crearTablas() {\r\n    try {\r\n      await this.database.executeSql(this.tablaReservas, []);\r\n      await this.database.executeSql(this.registro, []);\r\n      this.presentToast(\"Tabla Creada\");\r\n      this.buscarReservas();\r\n      this.isDbReady.next(true);\r\n    } catch (e) {\r\n      this.presentToast(\"error creartabla \" + e);\r\n    }\r\n  }\r\n\r\n  buscarReservas() {\r\n    //this.presentAlert(\"a\");\r\n    return this.database.executeSql('SELECT * FROM reserva', []).then(res => {\r\n      let items: Reservas[] = [];\r\n      //this.presentAlert(\"b\");\r\n      if (res.rows.length > 0) {\r\n        //this.presentAlert(\"c\");\r\n        for (var i = 0; i < res.rows.length; i++) {\r\n          //this.presentAlert(\"d\");\r\n          items.push({\r\n            id: res.rows.item(i).id,\r\n            servicio: res.rows.item(i).servicio,\r\n            fecha: res.rows.item(i).fecha\r\n          });\r\n        }\r\n      }\r\n      //this.presentAlert(\"d\");\r\n      this.listaReservas.next(items);\r\n    });\r\n  }\r\n\r\n  fetchReservas(): Observable<Reservas[]> {\r\n  return this.listaReservas.asObservable();\r\n  }\r\n\r\n  async presentToast(mensaje: string) {\r\n  const toast = await this.toastController.create({\r\n    message: mensaje,\r\n    duration: 3000\r\n  });\r\n  toast.present();\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"names":["Injectable","SQLite","Platform","ToastController","BehaviorSubject","DbserviceService","constructor","sqlite","platform","toastController","crearBD","addReserva","servicio","fecha","data","database","executeSql","then","res","buscarReservas","updateReserva","id","data2","deleteReserva","a","dbState","isDbReady","asObservable","ready","create","name","location","db","presentToast","crearTablas","catch","e","tablaReservas","registro","next","items","rows","length","i","push","item","listaReservas","fetchReservas","mensaje","toast","message","duration","present","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}